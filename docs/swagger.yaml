definitions:
  models.User:
    properties:
      created_at:
        type: string
      email:
        maxLength: 255
        type: string
      id:
        type: string
      name:
        maxLength: 255
        type: string
      password:
        maxLength: 255
        type: string
      surname:
        maxLength: 255
        type: string
      updated_at:
        type: string
      user_attrs:
        $ref: '#/definitions/models.UserAttrs'
      user_id:
        type: string
      user_status:
        type: integer
    required:
    - email
    - id
    - name
    - password
    - surname
    - user_attrs
    - user_id
    - user_status
    type: object
  models.UserAttrs:
    properties:
      description:
        type: string
      picture:
        type: string
      rating:
        maximum: 10
        minimum: 1
        type: integer
    type: object
info:
  contact:
    email: your@mail.com
    name: API Support
  description: This is an auto-generated API Docs.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: API
  version: "1.0"
paths:
  /v1/token/new:
    get:
      consumes:
      - application/json
      description: Create a new access token.
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: create a new access token
      tags:
      - Token
  /v1/user:
    delete:
      consumes:
      - application/json
      description: Delete user by given ID.
      parameters:
      - description: User ID
        in: body
        name: id
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: delete user by given ID
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Create a new user.
      parameters:
      - description: Title
        in: body
        name: title
        required: true
        schema:
          type: string
      - description: Author
        in: body
        name: author
        required: true
        schema:
          type: string
      - description: User attributes
        in: body
        name: user_attrs
        required: true
        schema:
          $ref: '#/definitions/models.UserAttrs'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      security:
      - ApiKeyAuth: []
      summary: create a new user
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update user.
      parameters:
      - description: User ID
        in: body
        name: id
        required: true
        schema:
          type: string
      - description: Name
        in: body
        name: name
        required: true
        schema:
          type: string
      - description: Surname
        in: body
        name: surname
        required: true
        schema:
          type: string
      - description: Email
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: string
      - description: User status
        in: body
        name: user_status
        required: true
        schema:
          type: integer
      - description: User attributes
        in: body
        name: user_attrs
        required: true
        schema:
          $ref: '#/definitions/models.UserAttrs'
      produces:
      - application/json
      responses:
        "201":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: update user
      tags:
      - User
  /v1/user/{id}:
    get:
      consumes:
      - application/json
      description: Get user by given ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: get user by given ID
      tags:
      - User
  /v1/users:
    get:
      consumes:
      - application/json
      description: Get all exists users.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      summary: get all exists users
      tags:
      - Users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
